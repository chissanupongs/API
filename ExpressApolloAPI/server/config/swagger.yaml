openapi: 3.0.4
info:
  title: Case Management API
  version: 1.0.0
  description: |
    API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏™ ‡πÄ‡∏ä‡πà‡∏ô ‡∏õ‡∏¥‡∏î alert, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ú‡∏• case_result, ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
servers:
  - url: http://localhost:4000
    description: Internal network server

# ---------------------------------------------------------------
# ‚ú® Global security: ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ Header `user_email`
# ---------------------------------------------------------------
security:
  - UserEmailHeader: []

tags:
  - name: User Accounts
    description: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  - name: Incidents
    description: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ incidents (‡∏õ‡∏¥‡∏î alert, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ú‡∏•)
  - name: History
    description: ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á

components:
  # --------------------------------------
  # üîê Security scheme
  # --------------------------------------
  securitySchemes:
    UserEmailHeader:
      type: apiKey
      in: header
      name: user_email

  # --------------------------------------
  # üì¶ Re-usable schemas
  # --------------------------------------
  schema:
    -http
    
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
    
    UserUnlockResult:
              type: object
              properties:
                user_email:
                  type: string
                  description: ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å
                account_status:
                  type: string
                  description: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ ‡πÄ‡∏ä‡πà‡∏ô "Unlocked"
                note:
                  $ref: '#/components/schemas/Note'
                error:
                  type: string
                  description: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
              # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ:
              example:
                user_email: "user1@example.com"
                account_status: "Unlocked"
                note:
                  id: "note-123"
                  action: "Unlocked"
                  content: "Account unlocked"

    Note:
      type: object
      properties:
        id:
          type: string
        action:
          type: string
        content:
          type: string


    Incident:
      type: object
      properties:
        alert_id:
          type: string
        alert_name:
          type: string
        alert_status:
          type: string
        case_result:
          type: string
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'

    HistoryEntry:
      type: object
      properties:
        authentication:
          type: object
          properties:
            user_email: { type: string }
            name:       { type: string }
            # id:         { type: string }
        user_agent: { type: string }
        ip_address: { type: string }
        action:     { type: string }
        case:
          oneOf:
            - $ref: '#/components/schemas/Incident'
            - $ref: '#/components/schemas/Note'

  responses:
    BadRequest:
      description: Request body ‡∏´‡∏£‡∏∑‡∏≠ parameter ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Missing 'alert_id'"

    NotFound:
      description: Resource ‡πÑ‡∏°‡πà‡∏û‡∏ö
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "No incident found for alert_id XYZ"

    Conflict:
      description: ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Multiple incidents found for alert_id ABC"

    InternalError:
      description: ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Internal server error"

paths:
# =================================================================
# üîì  PUT /accounts/unlock  ‚Äì (‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô logic)
# =================================================================
  /accounts/unlock:
    put:
      tags:
        - User Accounts
      summary: ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (single ‡∏´‡∏£‡∏∑‡∏≠ multi)
      security:
        - UserEmailHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required: [user_email]
                  properties:
                    user_email:
                      type: string
                - type: object
                  required: [users]
                  properties:
                    users:
                      type: array
                      items:
                        type: object
                        required: [user_email]
                        properties:
                          user_email:
                            type: string
            examples:
              SingleUser:
                summary: ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                value:
                  user_email: "user1@example.com"
              MultipleUsers:
                summary: ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô
                value:
                  users:
                    - user_email: "user1@example.com"
                    - user_email: "user2@example.com"
      responses:
        '200':
          description: ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å (‡∏≠‡∏≤‡∏à‡∏°‡∏µ error ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡∏∂‡πà‡∏á)
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserUnlockResult'
              example:
                results:
                  - user_email: "user1@example.com"
                    account_status: "Unlocked"
                    note:
                      id: "note-001"
                      action: "Unlocked"
                      content: "Account unlocked by admin"
                  - user_email: "missing@example.com"
                    error: "User not found"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

# =================================================================
# üõë  PUT /closedAlertStatus
# =================================================================
  /closedAlertStatus:
    put:
      tags: [Incidents]
      summary: ‡∏õ‡∏¥‡∏î `alert_status` ‡πÄ‡∏õ‡πá‡∏ô Closed ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° note
      security: [{ UserEmailHeader: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required: [alert_id, alert_status]
                  properties:
                    alert_id:     { type: string }
                    alert_status: { type: string, enum: [Closed] }
                - type: object
                  required: [incidents]
                  properties:
                    incidents:
                      type: array
                      items:
                        type: object
                        required: [alert_id, alert_status]
                        properties:
                          alert_id:     { type: string }
                          alert_status: { type: string, enum: [Closed] }
            examples:
              SingleAlert:
                summary: ‡∏õ‡∏¥‡∏î alert ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                value:
                  alert_id: "alert123"
                  alert_status: "Closed"
              MultipleAlerts:
                summary: ‡∏õ‡∏¥‡∏î‡∏´‡∏•‡∏≤‡∏¢ alert
                value:
                  incidents:
                    - alert_id: "alert123"
                      alert_status: "Closed"
                    - alert_id: "alert456"
                      alert_status: "Closed"
      responses:
        '200':
          description: ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Incident'
        '207':
          description: ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ö‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
          $ref: '#/components/responses/InternalError'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

# =================================================================
# ‚úèÔ∏è  PUT /updateCaseResult
# =================================================================
  /updateCaseResult:
    put:
      tags: [Incidents]
      summary: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï `case_result` ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° note
      security: [{ UserEmailHeader: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required: [alert_id, case_result, reason]
                  properties:
                    alert_id:
                      type: string
                    case_result:
                      type: string
                      enum: [WaitingAnalysis, TruePositives, FalsePositives, Analyzing]
                    reason:
                      type: string
                - type: object
                  required: [incidents]
                  properties:
                    incidents:
                      type: array
                      items:
                        type: object
                        required: [alert_id, case_result, reason]
                        properties:
                          alert_id:
                            type: string
                          case_result:
                            type: string
                            enum: [WaitingAnalysis, TruePositives, FalsePositives, Analyzing]
                          reason:
                            type: string
            examples:
              SingleCase:
                summary: update case ‡∏ú‡∏•‡πÄ‡∏Ñ‡∏™‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
                value:
                  alert_id: "alert123"
                  case_result: "TruePositives"
                  reason: "Confirmed as threat"
              MultipleCases:
                summary: update ‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏Ñ‡∏™
                value:
                  incidents:
                    - alert_id: "alert123"
                      case_result: "TruePositives"
                      reason: "Confirmed"
                    - alert_id: "alert456"
                      case_result: "WaitingAnalysis"
                      reason: "Needs more review"
      responses:
        '200':
          description: ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Incident'
        '207':
          description: ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô
          $ref: '#/components/responses/InternalError'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

# =================================================================
# üìú  GET /history
# =================================================================
  /history:
    get:
      tags: [History]
      summary: ‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
      security: [{ UserEmailHeader: [] }]
      responses:
        '200':
          description: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryEntry'
        '500':
          $ref: '#/components/responses/InternalError'
